# .goreleaser.yml
# GoReleaser configuration for gismo
# Documentation: https://goreleaser.com

version: 2

# Clean dist directory before build
before:
  hooks:
    - go mod tidy
    - go mod download

# Build configuration
builds:
  - id: gismo
    main: ./cmd/gismo
    binary: gismo
    
    # Custom build flags
    flags:
      - -trimpath
      
    # Custom ldflags
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    
    # Build for multiple platforms
    goos:
      - linux
      - darwin
      - windows
    
    goarch:
      - amd64
      - arm64
    
    # Skip certain combinations
    ignore:
      - goos: windows
        goarch: arm64
    
    # Set the modified timestamp on the output binary
    mod_timestamp: '{{ .CommitTimestamp }}'
    
    # Environment variables
    env:
      - CGO_ENABLED=0

  - id: gismo-init
    main: ./cmd/gismo-init
    binary: gismo-init
    
    # Custom build flags
    flags:
      - -trimpath
      
    # Custom ldflags
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    
    # Build for multiple platforms
    goos:
      - linux
      - darwin
      - windows
    
    goarch:
      - amd64
      - arm64
    
    # Skip certain combinations
    ignore:
      - goos: windows
        goarch: arm64
    
    # Set the modified timestamp on the output binary
    mod_timestamp: '{{ .CommitTimestamp }}'
    
    # Environment variables
    env:
      - CGO_ENABLED=0

  - id: gismo-show
    main: ./cmd/gismo-show
    binary: gismo-show
    
    # Custom build flags
    flags:
      - -trimpath
      
    # Custom ldflags
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    
    # Build for multiple platforms
    goos:
      - linux
      - darwin
      - windows
    
    goarch:
      - amd64
      - arm64
    
    # Skip certain combinations
    ignore:
      - goos: windows
        goarch: arm64
    
    # Set the modified timestamp on the output binary
    mod_timestamp: '{{ .CommitTimestamp }}'
    
    # Environment variables
    env:
      - CGO_ENABLED=0

# Archive configuration
archives:
  - id: gismo
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    
    # Archive format
    format_overrides:
      - goos: windows
        format: zip
    
    # Include all three binaries
    builds:
      - gismo
      - gismo-init
      - gismo-show
    
    # Files to include in archive
    files:
      - README.md
      - docs/*
      - examples/*
    
    # Use tar.gz for everything else
    format: tar.gz

# Checksum configuration
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

# Snapshot configuration (for testing)
snapshot:
  version_template: "{{ incpatch .Version }}-next"

# Changelog configuration
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug Fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: 'Performance Improvements'
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 2
    - title: 'Security Updates'
      regexp: "^.*security[(\\w)]*:+.*$"
      order: 3
    - title: 'Other Changes'
      order: 999

# Release configuration
release:
  github:
    owner: jrossi
    name: gismo
  
  # Release name template
  name_template: "{{.ProjectName}} v{{.Version}}"
  
  # If set to true, will not auto-publish the release
  draft: false
  
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  prerelease: auto
  
  # Release notes
  header: |
    ## gismo {{.Version}} ({{ .Date }})
    
    Welcome to this new release of gismo!
  
  footer: |
    ## Thanks!
    
    Those were the changes on {{ .Tag }}. Thank you for using gismo!
    
    ### Installation
    
    #### Install with Homebrew (macOS/Linux)
    
    ```bash
    brew tap jrossi/gismo https://github.com/jrossi/gismo
    brew install jrossi/gismo/gismo
    ```
    
    #### Download Binary
    
    Download the appropriate binary for your platform from the assets below.
    
    #### Install with Go
    
    ```bash
    go install github.com/jrossi/gismo/cmd/gismo@{{.Tag}}
    ```
    
    #### Install with curl (Linux/macOS)
    
    ```bash
    # Linux x86_64
    curl -L https://github.com/jrossi/gismo/releases/download/{{.Tag}}/gismo_{{.Version}}_Linux_x86_64.tar.gz | tar xz
    
    # macOS x86_64
    curl -L https://github.com/jrossi/gismo/releases/download/{{.Tag}}/gismo_{{.Version}}_Darwin_x86_64.tar.gz | tar xz
    
    # macOS arm64 (M1/M2)
    curl -L https://github.com/jrossi/gismo/releases/download/{{.Tag}}/gismo_{{.Version}}_Darwin_arm64.tar.gz | tar xz
    ```

# Homebrew tap configuration
brews:
  - name: gismo
    
    # GitHub repository to push the formula to
    repository:
      owner: jrossi
      name: gismo
      branch: main
    
    # Directory to store the formula in the repository
    directory: HomebrewFormula
    
    # Git commit information
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    
    # Commit message template
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    
    # Homepage
    homepage: "https://gismo.run"
    
    # Description
    description: "Gismo - Real-time linting feedback for AI code editors"
    
    # License
    license: "Apache-2.0"
    
    # Dependencies
    dependencies: []
    
    # Installation script
    install: |
      bin.install "gismo"
      bin.install "gismo-init"
      bin.install "gismo-show"
    
    # Test script
    test: |
      system "#{bin}/gismo", "--version"
    
    # Skip upload (set to false when ready to publish)
    skip_upload: false

# Announce configuration (optional)
announce:
  skip: true